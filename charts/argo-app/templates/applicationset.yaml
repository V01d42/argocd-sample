apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: {{ .Values.applicationSet.name }}
  namespace: {{ .Release.Namespace }}
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - list:
      elements:
      {{- range .Values.applicationSet.applications }}
      - cluster: {{ .cluster | default $.Values.applicationSet.defaults.cluster }}
        repoURL: {{ .repoURL }}
        chart: {{ .chart }}
        repoRevision: {{ .repoRevision }}
        path: {{ .path }}
        namespace: {{ .namespace }}
        {{- if .values }}
        values: {{ .values | toYaml | nindent 10 }}
        {{- end }}
      {{- end }}
  template:
    metadata:
      name: '{{`{{ .path }}`}}'
      {{- if .Values.applicationSet.labels }}
      labels:
        {{- toYaml .Values.applicationSet.labels | nindent 8 }}
      {{- end }}
      {{- if .Values.applicationSet.annotations }}
      annotations:
        {{- toYaml .Values.applicationSet.annotations | nindent 8 }}
      {{- end }}
    spec:
      project: {{ .Values.applicationSet.project }}
      sources:
      - repoURL: '{{`{{ .repoURL }}`}}'
        chart: '{{`{{ .chart }}`}}'
        targetRevision: '{{`{{ .repoRevision }}`}}'
        helm:
          valueFiles:
            - '{{`$values/charts/{{ .path }}/values.yaml`}}'
      - repoURL: {{ .Values.applicationSet.valueSourceRepo.url }}
        targetRevision: '{{ .Values.applicationSet.valueSourceRepo.targetRevision }}'
        ref: {{ .Values.applicationSet.valueSourceRepo.ref }}
      destination:
        server: '{{`{{ .cluster }}`}}'
        namespace: '{{`{{ .namespace }}`}}'
      syncPolicy:
        {{- with .Values.applicationSet.syncPolicy }}
        {{- toYaml . | nindent 8 }}
        {{- end }}